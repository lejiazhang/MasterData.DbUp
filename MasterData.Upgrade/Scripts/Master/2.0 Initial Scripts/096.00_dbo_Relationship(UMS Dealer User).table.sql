BEGIN TRY
	-- CLEAR DATA
	DELETE FROM [DBO].[RELATIONSHIP] WHERE RELATIONSHIPID IN (10, 115) AND COMPANYID = '$CompanyId$'; 

	MERGE INTO [DBO].[RELATIONSHIP] AS TARGET
	USING
	(
		SELECT  DISTINCT BP_MAIN.BUSS_PTNR_ID AS PARENT_ID 
		,1 AS [COMPANY_ID]
		,115 AS RELATIONSHIP_ID
		,UMS_SYS_USR.SYS_USR_ID AS CHILD_ID  
		,UMS_USR_EXTR_RLTN.ACT_IND
		,UMS_USR_EXTR_RLTN.INSR_DTE
		FROM STAGING_DB_AFC.DBO.UMS_SYS_USR
			JOIN STAGING_DB_AFC.DBO.UMS_USR_EXTR_RLTN ON UMS_SYS_USR.SYS_USR_ID = UMS_USR_EXTR_RLTN.SYS_USR_ID AND UMS_USR_EXTR_RLTN.FLAG <> 'D'
			JOIN STAGING_DB_AFC.DBO.BP_MAIN ON UMS_USR_EXTR_RLTN.EXTR_BP_ID = BP_MAIN.BUSS_PTNR_ID AND BP_MAIN.FLAG <> 'D'
			JOIN STAGING_DB_AFC.DBO.BP_ROLE_ASOC ON BP_MAIN.BUSS_PTNR_ID = BP_ROLE_ASOC.BUSS_PTNR_ID AND BP_ROLE_ASOC.FLAG <> 'D' AND BP_ROLE_ASOC.BP_ROLE_ID = 1
			--JOIN STAGING_DB_AFC.DBO.LKUP_DET ON BP_ROLE_ASOC.BP_ROLE_ID = LKUP_DET.LKUP_DET_ID 
		WHERE UMS_SYS_USR.FLAG <> 'D'
	)
	AS [SOURCE] (PARENT_ID, [COMPANY_ID], RELATIONSHIP_ID, CHILD_ID, ACT_IND, INSR_DTE) 
		ON 
		(
			[TARGET].PARENTID = [SOURCE].PARENT_ID AND
			[TARGET].CHILDID = [SOURCE].CHILD_ID AND
			[TARGET].RELATIONSHIPID = [SOURCE].RELATIONSHIP_ID AND
			[TARGET].[COMPANYID] = '$CompanyId$'
		)

	WHEN MATCHED THEN
		-- ROW FOUND : UDPATE EXISTING ROWS
		UPDATE SET
 
			[TARGET].[ACTIVEIND] = [SOURCE].ACT_IND,
			[TARGET].[CREATIONDATE] = [SOURCE].INSR_DTE 

	WHEN NOT MATCHED BY TARGET THEN
		-- INSERT NEW ROWS 
		INSERT ([PARENTID], [CHILDID], [RELATIONSHIPID], [ACTIVEIND], [CREATIONDATE], [COMPANYID])
		VALUES ([SOURCE].PARENT_ID, [SOURCE].CHILD_ID, [SOURCE].RELATIONSHIP_ID, [SOURCE].ACT_IND, [SOURCE].INSR_DTE, '$CompanyId$')

	WHEN NOT MATCHED BY SOURCE THEN 
		-- DELETE ROWS THAT ARE IN THE TARGET BUT NOT THE SOURCE 
		DELETE;

	PRINT 'DEALER USER RELATIONSHIP MERGE SCRIPT RAN SUCCESSFULLY.'
END TRY
BEGIN CATCH
	  SELECT  
      ERROR_NUMBER() AS ERRORNUMBER  
     ,ERROR_SEVERITY() AS ERRORSEVERITY  
     ,ERROR_STATE() AS ERRORSTATE  
     ,ERROR_PROCEDURE() AS ERRORPROCEDURE  
     ,ERROR_LINE() AS ERRORLINE  
     ,ERROR_MESSAGE() AS ERRORMESSAGE;  

	 PRINT 'DEALER USER RELATIONSHIP IN DBO.RELATIONSHIP.TABLE.SQL.'

END CATCH;

--SELECT  DISTINCT BP_MAIN.BUSS_PTNR_ID AS PARENT_ID 
--		,1 AS [COMPANY_ID]
--		,115 AS RELATIONSHIP_ID
--		,UMS_SYS_USR.SYS_USR_ID AS CHILD_ID  
--		,UMS_USR_EXTR_RLTN.ACT_IND
--		,UMS_USR_EXTR_RLTN.INSR_DTE
--		FROM STAGING_DB_AFC.DBO.UMS_SYS_USR
--			JOIN STAGING_DB_AFC.DBO.UMS_USR_EXTR_RLTN ON UMS_SYS_USR.SYS_USR_ID = UMS_USR_EXTR_RLTN.SYS_USR_ID AND UMS_USR_EXTR_RLTN.FLAG <> 'D'
--			JOIN STAGING_DB_AFC.DBO.BP_MAIN ON UMS_USR_EXTR_RLTN.EXTR_BP_ID = BP_MAIN.BUSS_PTNR_ID AND BP_MAIN.FLAG <> 'D'
--			JOIN STAGING_DB_AFC.DBO.BP_ROLE_ASOC ON BP_MAIN.BUSS_PTNR_ID = BP_ROLE_ASOC.BUSS_PTNR_ID AND BP_ROLE_ASOC.FLAG <> 'D' AND BP_ROLE_ASOC.BP_ROLE_ID = 1
--			--JOIN STAGING_DB_AFC.DBO.LKUP_DET ON BP_ROLE_ASOC.BP_ROLE_ID = LKUP_DET.LKUP_DET_ID 
--		WHERE STAGING_DB_AFC.DBO.UMS_SYS_USR.FLAG <> 'D' 
--		and not exists (select * from Relationship where  BP_MAIN.BUSS_PTNR_ID = ParentID and UMS_SYS_USR.SYS_USR_ID = ChildID
--		and CompanyID = 1 and RelationshipID = 115)