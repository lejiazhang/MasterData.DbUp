IF  EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_MSins_dboFP_FNCL_PROD]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[sp_MSins_dboFP_FNCL_PROD]
GO

CREATE PROCEDURE [dbo].[sp_MSins_dboFP_FNCL_PROD]
	@FNCL_PROD_ID			INT,			    
    @NME					VARCHAR(100),	    
    @DSCR					VARCHAR(500),	    
    @FNCL_PROD_GRP_ID		INT,			    
    @MIN_FNCL_TRMS			INT,			    
    @MAX_FNCL_TRMS			INT,			    
    @VLDY_STRT_DTE			DATETIME,		    
    @VLDY_END_DTE			DATETIME,		    
    @INSR_DTE				DATETIME,		    
    @UPDT_DTE				DATETIME,		    
    @EXEC_DTE				DATETIME,		    
    @FLAG					CHAR(1)	
AS
BEGIN
    DECLARE @COMPANYID INT, @FINC_TYPE_KEY varchar(25);
    SET @COMPANYID = '$CompanyId$'

	SET @FINC_TYPE_KEY = (SELECT FINC_TYPE_KEY FROM [dbo].[FP_FNCL_PROD_GRP] WHERE [FNCL_PROD_GRP_ID] = @FNCL_PROD_GRP_ID)

    IF (@FLAG = 'I')
			BEGIN TRY
				IF NOT EXISTS(SELECT 1 FROM FINANCIALPRODUCT WHERE FINANCIALPRODUCTID = @FNCL_PROD_ID AND COMPANYID = @COMPANYID)
					BEGIN
						INSERT INTO [DBO].FINANCIALPRODUCT
							(
							FINANCIALPRODUCTID,
							COMPANYID,
							FINANCIALPARAMETERID,
							FINANCIALGROUPID,
							PRODUCTNAME,
							PRODUCTFULLNAME,
							VALIDFROMDATE,
							VALIDTODATE,
							OperatingBusiness,
							LeaseType
							)
						VALUES
							(
								@FNCL_PROD_ID,
								@COMPANYID,
								@FNCL_PROD_ID,
								@FNCL_PROD_GRP_ID,
								@NME,
								@DSCR,
								@VLDY_STRT_DTE,
								@VLDY_END_DTE,
								@FINC_TYPE_KEY,
								@FINC_TYPE_KEY)
					END
					
                IF NOT EXISTS(SELECT 1 FROM FINANCIALPARAMETER WHERE FINANCIALPARAMETERID = @FNCL_PROD_ID AND COMPANYID = @COMPANYID)
					BEGIN
						INSERT INTO [DBO].FINANCIALPARAMETER
						(
						FINANCIALPARAMETERID,
						COMPANYID,
						PARAMETERNAME,
						MINIMUMLEASETERM,
						MAXIMUMLEASETERM,
						CREATIONDATE
						)
					VALUES
						(
						@FNCL_PROD_ID,
						@COMPANYID,
						@NME,
						@MIN_FNCL_TRMS,
						@MAX_FNCL_TRMS,
						@INSR_DTE)
					END
		END TRY
		BEGIN CATCH
			SELECT
        ERROR_NUMBER() AS ERRORNUMBER,
        ERROR_STATE() AS ERRORSTATE,
        ERROR_SEVERITY() AS ERRORSEVERITY,
        ERROR_PROCEDURE() AS ERRORPROCEDURE,
        ERROR_LINE() AS ERRORLINE,
        ERROR_MESSAGE() AS ERRORMESSAGE;
		END CATCH;
END  
GO

